<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="stylesheet" href="styles/style.css" />
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-LN+7fdVzj6u52u30Kp6M/trliBMCMKTyK833zpbD+pXdCLuTusPj697FH4R/5mcr" crossorigin="anonymous">
        <title>Noted.</title>
    </head>

    <body>
        <header class="p-3">
            <h1 class="ms-a"><a href="/" style="color: #47457B">noted.</a></h1>
        </header>
        <br/>
        <form action="/new" method="get">
            <button class="btn btn-primary ms-3">Create</button>
        </form>
        <!--Should this be inline with the create button? maybe on the other side of the page? maybe in its own section?-->
        <button type="button" onclick="filterNotesASC()">Filter ASC</button>
        <button type="button" onclick="filterNotesDESC()">Filter DESC</button>

        <!--New notes container-->
        <div id="notesContainer">

        </div>

        <!--Bootstrap-->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/js/bootstrap.bundle.min.js" integrity="sha384-ndDqU0Gzau9qJ1lfW4pNLlhNTkCfHzAVBReH9diLvGRem5+R9g2FzA8ZGN954O5Q" crossorigin="anonymous"></script>
        
        <!--This script tag exists purely to stop VS Code from showing me an error for EJS tags within the script tag-->
        <script type="application/json" id="notesJSON">
            <%- JSON.stringify(list)%>
        </script>
        <script>
            //Stringifies the list of notes recieved from the database
            const raw = document.getElementById('notesJSON').textContent;
            const notesList = JSON.parse(raw);
            //console.log(notesList);

            //Function to render notes
            function renderNotes(notes){
                //gets note container element
                const container = document.getElementById("notesContainer");
                //clears any existing content
                container.innerHTML = '';
                
                //creates the HTML card for each item in the notes array
                notes.forEach(item => {
                    const card = document.createElement('div');
                    card.classList.add('card', 'mx-3', 'my-3');
                    card.style.width = '90%';
                    card.innerHTML = `
                        <div class="card-body">
                            <h5 class="card-title">${item.title}</h5>
                            <h6 class="card-subtitle mb-2 text-body-secondary">${item.priority}</h6>
                            <p class="card-text">${item.content}</p>
                            <a href="/edit/${item.id}">Edit</a>
                            <a class="ps-1" href="/delete/${item.id}">Delete</a>
                        </div>
                    `;
                    container.appendChild(card);
                });
            }

            //Intial call of renderNotes
            renderNotes(notesList);

            //FILTER FUNCTIONS
            //Function for ordering alphabetically, ascending
            function filterNotesASC(){
                //Initializes a new array and coppies notesList
                let newList = [];
                for(x = 0; x < notesList.length; x++) {
                    let index = 0;
                    let noteTitle = notesList[x].title;
                    for(i = 0; i < newList.length; i++) {
                        let thisTitle = newList[i].title;
                        //Compares the two titles
                        let compareResult = noteTitle.localeCompare(thisTitle);
                        if (compareResult == -1) {
                            //Will force the loop to exit if a place for the note is found
                            i = newList.length;
                        } else {
                            console.log(notesList[x].id + " " + newList[i].id);
                            index++;
                        }
                    }
                    //Adds not to the newList array at the given index
                    newList.splice(index, 0, notesList[x]);
                }
                //re-renders the notes with the new list
                renderNotes(newList);
            }
            //Function for ordering alphabetically, descending
            function filterNotesDESC(){
                //Initializes a new array and coppies notesList
                let newList = [];
                for(x = 0; x < notesList.length; x++) {
                    let index = 0;
                    let noteTitle = notesList[x].title;
                    for(i = 0; i < newList.length; i++) {
                        let thisTitle = newList[i].title;
                        let compareResult = noteTitle.localeCompare(thisTitle);
                        if (compareResult == 1) {
                            i = newList.length;
                        } else {
                            index++;
                        }
                    }
                    newList.splice(index, 0, notesList[x]);
                }
                //re-renders the notes with the new list
                renderNotes(newList);
            }
        </script>
    </body>
</html>